--TABLA PARA GENERAR LOS EMPLEADOS
CREATE TABLE EMPLEADOS (
ID_EMPLEADO INT NOT NULL IDENTITY,
NOMBRE VARCHAR(100) NOT NULL,
APELLIDO VARCHAR(100) NOT NULL,
ID_PUESTO INT NOT NULL,
SALARIO FLOAT NOT NULL,
ESTA_ACTIVO BIT NOT NULL,
FECHA_ALTA DATE NOT NULL,
FECHA_BAJA DATE,
MAIL VARCHAR(150)

CONSTRAINT PK_ID_EMPLEADO PRIMARY KEY(ID_EMPLEADO)
CONSTRAINT FG_ID_PUESTOS FOREIGN KEY (ID_PUESTO) REFERENCES PUESTOS(ID_PUESTO)
);

CREATE TABLE PUESTOS(
ID_PUESTO INT NOT NULL,
NOMBRE VARCHAR(200) NOT NULL,
NIVEL_AUTORIZACION INT NOT NULL

CONSTRAINT PK_ID_PUESTO PRIMARY KEY(ID_PUESTO)
);

--INSERTO ESTOS VALORES EN LA TABLA PUESTOS

INSERT INTO PUESTOS (ID_PUESTO,NOMBRE,NIVEL_AUTORIZACION) VALUES (1,'Director',3);
INSERT INTO PUESTOS (ID_PUESTO,NOMBRE,NIVEL_AUTORIZACION) VALUES (2,'Gerente',3);
INSERT INTO PUESTOS (ID_PUESTO,NOMBRE,NIVEL_AUTORIZACION) VALUES (5,'Jefe de sector',2);
INSERT INTO PUESTOS (ID_PUESTO,NOMBRE,NIVEL_AUTORIZACION) VALUES (4,'Administrativo',1);
INSERT INTO PUESTOS (ID_PUESTO,NOMBRE,NIVEL_AUTORIZACION) VALUES (3,'Vendedor',0);
INSERT INTO PUESTOS (ID_PUESTO,NOMBRE,NIVEL_AUTORIZACION) VALUES (6,'Secretario',2);

--INSERTO ESTOS VALORES EN LA TABLA EMPLEADOS

INSERT INTO EMPLEADOS (NOMBRE,APELLIDO,ID_PUESTO,SALARIO,ESTA_ACTIVO,FECHA_ALTA,MAIL) VALUES ('Leilani','Kinney',1,383946.80,1,'1996-03-21','lkinney@gmail.com')
INSERT INTO EMPLEADOS (NOMBRE,APELLIDO,ID_PUESTO,SALARIO,ESTA_ACTIVO,FECHA_ALTA,MAIL) VALUES ('Igor','England',5,283558.85,1,'2013-03-28','iengland@hotmail.com')
INSERT INTO EMPLEADOS (NOMBRE,APELLIDO,ID_PUESTO,SALARIO,ESTA_ACTIVO,FECHA_ALTA) VALUES ('Leilani','Kinney',3,383946.80,1,'1993-10-24')
INSERT INTO EMPLEADOS (NOMBRE,APELLIDO,ID_PUESTO,SALARIO,ESTA_ACTIVO,FECHA_ALTA,FECHA_BAJA,MAIL) VALUES ('Leilani','Kinney',4,383946.80,0,'2012-06-07','2015-02-19','hmoss@gmail.com')
INSERT INTO EMPLEADOS (NOMBRE,APELLIDO,ID_PUESTO,SALARIO,ESTA_ACTIVO,FECHA_ALTA) VALUES ('Leilani','Kinney',2,383946.80,1,'2019-09-23')


--4)

--BORRA TODA LA TABLA EXCEPTO LA MISMA
DELETE FROM EMPLEADOS

--MUESTRO TODA LA TABLA EMPLEADOS
SELECT * FROM EMPLEADOS

--MUESTRO TODOS LOS DATOS Y LAS RELACIONES ENTRE EL ID_PUESTO DEL EMPLEADO CON EL CARGO DE LA TABLA PUESTO
SELECT * FROM EMPLEADOS AS E INNER JOIN PUESTOS AS P ON E.ID_PUESTO = P.ID_PUESTO WHERE E.ID_EMPLEADO = 6; 

--NOMBRE DE TODOS LOS PUESTOS
SELECT NOMBRE FROM PUESTOS

--SOLO LOS EMPLEADOS ACTIVOS
SELECT * FROM EMPLEADOS WHERE EMPLEADOS.ESTA_ACTIVO = 1;

--SOLO LOS EMPLEADOS QUE SU SUELDO ES SUPERIOR A 200.000
SELECT * FROM EMPLEADOS WHERE EMPLEADOS.SALARIO > 200000;

--Los empleados cuya fecha de alta sea menor o igual al 07/06/2012.
SELECT * FROM EMPLEADOS WHERE EMPLEADOS.FECHA_ALTA <= '2012-06-07';

--Los empleados que no tengan mail cargado.
SELECT * FROM EMPLEADOS WHERE EMPLEADOS.MAIL IS NULL

--Los empleados que tengan mail cargado.
SELECT * FROM EMPLEADOS WHERE EMPLEADOS.MAIL IS NOT NULL

--Los empleados cuyo mail sea de gmail.
SELECT * FROM EMPLEADOS WHERE MAIL LIKE '%@gmail%' 

--Los empleados cuyo apellido empiece con la letra "B".
SELECT * FROM EMPLEADOS WHERE APELLIDO LIKE 'E%'

--5)

--Los empleados que estén activos y ganen más de $300.000,00.
SELECT E.* FROM EMPLEADOS AS E WHERE E.ESTA_ACTIVO = 1 AND E.SALARIO > 300000; 

--Los empleados que no tengan mail o no estén activos.
SELECT E.* FROM EMPLEADOS AS E WHERE E.MAIL IS NULL OR E.ESTA_ACTIVO = 0;

--Los empleados que tengan mail y su nombre contenga la letra "a".
SELECT E.* FROM EMPLEADOS AS E WHERE E.MAIL IS NOT NULL AND E.NOMBRE LIKE '%a%'

--Los empleados que ganen $250.000,00 o más y hayan ingresado después del año 2000 inclusive, 
--o aquellos que ganen menos de $250.000,00 y hayan ingresado antes del año 2000 sin incluir.

SELECT E.* FROM EMPLEADOS AS E WHERE E.SALARIO > 250000 AND E.FECHA_ALTA >= '2000-01-01' UNION SELECT * FROM EMPLEADOS AS E WHERE E.SALARIO < 250000 AND E.FECHA_ALTA < '2000-01-01';

--ACTUALIZAR UN EMPLEADO

UPDATE EMPLEADOS SET NOMBRE = 'Yenni', APELLIDO = 'Rochisa', SALARIO = 195000, FECHA_ALTA = '1982-10-07' WHERE EMPLEADOS.ID_EMPLEADO = 9;

--Los empleados cuyo salario esté entre $100.000,00 y $250.000,00.
SELECT * FROM EMPLEADOS WHERE EMPLEADOS.SALARIO BETWEEN 100000 AND 250000;

--Los empleados cuyo salario NO esté entre $100.000,00 y $250.000,00.
SELECT * FROM EMPLEADOS WHERE EMPLEADOS.SALARIO NOT BETWEEN 100000 AND 250000;

--Los puestos con nivel de autorización 0, 1 o 2.
SELECT * FROM PUESTOS WHERE PUESTOS.NIVEL_AUTORIZACION BETWEEN 0 AND 2

--Los puestos con nivel de autorización distinto a 0, 1 y 2.
SELECT * FROM PUESTOS WHERE PUESTOS.NIVEL_AUTORIZACION NOT BETWEEN 0 AND 2

--6)

--Los empleados activos ordenados alfabéticamente por su apellido de manera ascendente.
SELECT * FROM EMPLEADOS ORDER BY (EMPLEADOS.APELLIDO) ASC

--Los tres empleados más viejos.
SELECT TOP(3)* FROM EMPLEADOS ORDER BY (EMPLEADOS.FECHA_ALTA) ASC

--Los tres empleados que más ganan.
SELECT TOP(3)* FROM EMPLEADOS ORDER BY (EMPLEADOS.SALARIO) DESC

--Todos los datos de los empleados ordenados por el valor de sus salarios de manera descendente.
SELECT * FROM EMPLEADOS ORDER BY(EMPLEADOS.SALARIO) ASC

--Los distintos niveles de autorización de los puestos, sin repetir.
SELECT DISTINCT (NIVEL_AUTORIZACION) FROM PUESTOS 

--7)

--El nombre y apellido de los empleados, junto al nombre de su puesto.
SELECT E.NOMBRE,E.APELLIDO,P.NOMBRE AS CARGO FROM EMPLEADOS AS E INNER JOIN PUESTOS AS P ON E.ID_PUESTO = P.ID_PUESTO

--Los empleados que tengan un puesto con nivel de autorización igual a 3.
SELECT E.*, P.NIVEL_AUTORIZACION FROM EMPLEADOS AS E INNER JOIN PUESTOS AS P ON P.ID_PUESTO = E.ID_PUESTO AND P.NIVEL_AUTORIZACION = 3

--El nombre y apellido de los empleados, junto al nombre de su puesto, ordenados alfabéticamente por apellido del empleado de manera ascendente.

SELECT E.NOMBRE,E.APELLIDO, P.NOMBRE AS CARGO FROM EMPLEADOS AS E INNER JOIN PUESTOS AS P ON E.ID_PUESTO = P.ID_PUESTO ORDER BY (E.APELLIDO) ASC

--El nombre y apellido de los empleados, junto al nombre de su puesto, ordenados alfabéticamente por nombre del puesto de manera ascendente.

SELECT E.NOMBRE,E.APELLIDO, P.NOMBRE AS CARGO FROM EMPLEADOS AS E INNER JOIN PUESTOS AS P ON E.ID_PUESTO = P.ID_PUESTO ORDER BY (E.NOMBRE) ASC

--Nombre, apellido y nombre del puesto de los empleados que estén activos, ordenados por su nivel de autorización de forma ascendente.

SELECT E.NOMBRE,E.APELLIDO, P.NOMBRE AS CARGO FROM EMPLEADOS AS E INNER JOIN PUESTOS AS P ON E.ID_PUESTO = P.ID_PUESTO WHERE E.ESTA_ACTIVO = 1 ORDER BY (P.NIVEL_AUTORIZACION) ASC

--Los puestos que no tengan empleados asociados. (con el where is null filtro las filas que no hay coincidencia)
SELECT P.NOMBRE AS PUESTO_SIN_ASIGNAR,P.* FROM PUESTOS AS P LEFT JOIN EMPLEADOS AS E ON P.ID_PUESTO = E.ID_PUESTO WHERE E.ID_PUESTO IS NULL

--Los puestos que tienen empleados asociados.
SELECT P.NOMBRE AS PUESTO_ASIGNADOS FROM PUESTOS AS P LEFT JOIN EMPLEADOS AS E ON P.ID_PUESTO = E.ID_PUESTO WHERE E.ID_PUESTO IS NOT NULL

--8)

--El promedio de los salarios de todos los empleados que estén activos.
SELECT AVG(SALARIO) AS SUELDO_PROMEDIO FROM EMPLEADOS

--La suma de los salarios de todos los empleados que estén activos.
SELECT SUM(SALARIO) AS SUMA_TOLTA_SALARIOS FROM EMPLEADOS WHERE EMPLEADOS.ESTA_ACTIVO = 1;

--La cantidad de empleados que ganan más de $250.000,00.
SELECT  COUNT(ID_EMPLEADO) FROM EMPLEADOS WHERE EMPLEADOS.SALARIO > 250000

--La cantidad de empleados que ingresaron antes del año 2010.
SELECT COUNT(ID_EMPLEADO) FROM EMPLEADOS WHERE EMPLEADOS.FECHA_ALTA < '2010-01-01'

--El salario más alto.
SELECT MAX(SALARIO) AS SALARIO_MAS_ALTO FROM EMPLEADOS

--Los puestos con el nivel de autorización más bajo.
SELECT NOMBRE,NIVEL_AUTORIZACION FROM PUESTOS WHERE NIVEL_AUTORIZACION = (SELECT MIN(NIVEL_AUTORIZACION) FROM PUESTOS)

--El nombre completo de todos los empleados (concatenado).
SELECT CONCAT(NOMBRE, ' ',APELLIDO) AS NOMBRE_COMPLETO FROM EMPLEADOS

--El nombre completo de todos los empleados (concatenado), el nombre de su puesto y su nivel de autorización.

SELECT CONCAT(E.NOMBRE, ' ',E.APELLIDO) AS NOMBRE_COMPLETO ,P.NOMBRE,P.NIVEL_AUTORIZACION  FROM EMPLEADOS AS E INNER JOIN PUESTOS P ON E.ID_PUESTO = P.ID_PUESTO  

--El nombre completo de todos los empleados (concatenado), el nombre de su puesto y su nivel de autorización.
--Y los puestos con su nivel de autorización que no tengan empleados asociados. Todo en una misma consulta.
SELECT CONCAT(E.NOMBRE,' ',E.APELLIDO) AS NOMBRE_COMPLETO, P.NOMBRE,P.NIVEL_AUTORIZACION
FROM EMPLEADOS AS E 
INNER JOIN PUESTOS AS P ON E.ID_PUESTO = P.ID_PUESTO

UNION 
--no lo termine
SELECT P.NOMBRE AS PUESTO,P.NIVEL_AUTORIZACION 
FROM PUESTOS AS P 
LEFT JOIN EMPLEADOS AS E ON P.ID_PUESTO = E.ID_PUESTO WHERE E.ID_EMPLEADO IS NULL

--La cantidad de empleados por puesto.
SELECT P.ID_PUESTO, P.NOMBRE AS Puesto, COUNT(E.ID_EMPLEADO) AS CantidadEmpleados
FROM PUESTOS P
LEFT JOIN EMPLEADOS E ON P.ID_PUESTO = E.ID_PUESTO
GROUP BY P.ID_PUESTO, P.NOMBRE

--El promedio del salario por puesto.
SELECT P.ID_PUESTO, P.NOMBRE ,AVG(E.SALARIO) AS SALARIO_PROMEDIO 
FROM PUESTOS AS P  LEFT JOIN EMPLEADOS AS E ON P.ID_PUESTO = E.ID_PUESTO
GROUP BY P.ID_PUESTO ,P.NOMBRE ,E.SALARIO
ORDER BY (P.ID_PUESTO) ASC

--Nombre, apellido y salario del empleado que más gana.
SELECT E.NOMBRE,E.APELLIDO, E.SALARIO 
FROM EMPLEADOS AS E
WHERE E.SALARIO = (SELECT MAX(SALARIO) FROM EMPLEADOS)


--Los empleados con el nivel de autorización más alto.
SELECT E.NOMBRE, E.APELLIDO, P.NIVEL_AUTORIZACION
FROM EMPLEADOS AS E
INNER JOIN PUESTOS AS P ON E.ID_PUESTO = P.ID_PUESTO
WHERE P.NIVEL_AUTORIZACION = (SELECT MAX(NIVEL_AUTORIZACION) FROM PUESTOS);

--Agregar el mail mbrock@yahoo.com a Yenni Rochisa filtrando por su ID_EMPLEADO. Verificar con una consulta la correcta ejecución del comando.
UPDATE EMPLEADOS SET MAIL = 'mbrock@yahoo.com' WHERE ID_EMPLEADO =  9

--Cambiar el puesto de Yenni Rochisa a Administrativo y su salario a $210.000,00.

UPDATE EMPLEADOS SET ID_PUESTO = 4, SALARIO = 210000.00 WHERE ID_EMPLEADO = 9

--Dar un aumento del 25% a todos los empleados que ganen menos de $250.000,00.

UPDATE EMPLEADOS SET SALARIO = SALARIO * 1.25 WHERE SALARIO < 250000

SELECT * FROM EMPLEADOS


